{"version":3,"sources":["logo.svg","features/Todo/components/TodoList/index.jsx","component/form-controls/InputField/index.jsx","features/Todo/components/TodoForm/index.jsx","features/Todo/pages/TodoList/index.jsx","features/Todo/pages/TodoDetail/index.jsx","features/Todo/index.jsx","features/Album/components/Album/index.jsx","features/Album/components/AlbumList/index.jsx","features/Album/index.jsx","api/axiosClient.js","api/productApi.js","features/Counter/counterSlice.js","features/Counter/index.jsx","component/form-controls/PasswordField/index.jsx","features/Auth/components/RegisterForm/index.jsx","api/userAPI.js","constants/storage-keys.js","features/Auth/userSlice.js","features/Auth/components/Register/index.jsx","features/Auth/components/Login Form/index.jsx","features/Auth/components/Login/index.jsx","features/Cart/selectors.js","component/Header/index.jsx","features/Product/components/ProductSkeletonList.jsx","constants/common.js","ultis/common.js","features/Product/components/Product.jsx","features/Product/components/ProductList.jsx","features/Product/components/ProductSort.jsx","api/categoryApi.js","features/Product/components/Filters/FilterByCategory.jsx","features/Product/components/Filters/FilterByPrice.jsx","features/Product/components/Filters/FilterByService.jsx","features/Product/components/ProductFilters.jsx","features/Product/components/FilterViewer.jsx","features/Product/pages/ListPage.jsx","features/Product/components/ProductThumbnail.jsx","features/Product/components/ProductInfo.jsx","component/form-controls/QuantityField/index.jsx","features/Product/components/AddToCartForm.jsx","features/Product/components/ProductMenu.jsx","features/Product/components/ProductDescription.jsx","features/Product/components/ProductAdditional.jsx","features/Product/components/ProductReview.jsx","features/Cart/cartSlice.js","features/Product/pages/DetailPage.jsx","features/Product/hooks/useProductDetail.js","features/Product/Product.jsx","features/Cart/Cart.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["TodoList","props","todoList","onTodoClick","className","map","todo","index","status","onClick","handleClick","title","id","defaultProps","InputField","form","name","label","disable","errors","formState","hasError","touchedFields","control","render","field","TextField","fullWidth","variant","margin","disabled","error","helperText","message","TodoForm","schema","yup","shape","required","useForm","defaultValues","resolver","yupResolver","onSubmit","handleSubmit","values","Todos","initTodoList","location","useLocation","history","useHistory","match","useRouteMatch","useState","setTodoList","queryString","parse","search","filterTodo","setFilterTodo","useEffect","param","renderedListTodo","filter","newTodo","length","newListTodo","newTodoList","push","pathname","path","stringify","TodoDetail","TotoFeature","component","Album","album","src","thumbnailUrl","alt","AlbumList","albumList","AlbumFeature","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","Promise","reject","response","data","includes","url","errorList","messageList","messages","firstMessage","Error","productApi","getAll","params","newParams","_start","_page","_limit","get","productList","count","pagination","page","limit","total","add","post","update","patch","remove","delete","counterSlice","createSlice","require","initialState","reducers","increase","state","action","decrease","actions","reducer","CounterFeature","PasswordField","showPassword","setShowPassword","toggleShowPassword","x","FormControl","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","edge","FormHelperText","useStyles","makeStyles","theme","root","paddingTop","spacing","avatar","backgroundColor","palette","secondary","main","textAlign","submit","line","marginBottom","RegisterForm","classes","fullName","test","value","trim","split","email","password","min","retypePassword","oneOf","a","isSubmitting","LinearProgress","Avatar","Typography","Button","color","userApi","register","login","StorageKeys","USER","TOKEN","createAsyncThunk","payload","localStorage","setItem","jwt","JSON","user","userSlice","current","getItem","settings","logout","removeItem","extraReducers","fulfilled","Register","dispatch","useDispatch","enqueueSnackbar","useSnackbar","username","resultAction","unwrapResult","closeDialog","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","console","log","LoginForm","identifier","Login","cartItemsSelector","cart","cartItems","cartItemsCountSelector","createSelector","reduce","item","quantity","product","salePrice","flexGrow","menuButton","marginRight","link","textDecoration","closeButton","top","right","grey","zIndex","MODE","Header","isLoggedIn","useSelector","cartItemsCount","open","setOpen","mode","setMode","anchorEl","setAnchorEl","handleClose","handleCloseMenu","AppBar","Toolbar","to","activeClassName","aria-label","Badge","badgeContent","ShoppingCart","e","currentTarget","Menu","keepMounted","Boolean","onClose","Fade","transformOrigin","getContentAnchorEl","MenuItem","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","Close","DialogContent","Box","ProductSkeletonList","Grid","container","Array","from","xs","sm","md","lg","padding","Skeleton","width","height","STATIC_HOST","THUMBNAIL_PLACEHOLDER","formatPrice","price","Intl","NumberFormat","style","currency","format","Product","thumbnail","minHeight","fontSize","fontWeight","mr","promotionPercent","ProductList","ProductSort","currentSort","onChange","Tabs","indicatorColor","textColor","event","newValue","Tab","categoryApi","menu","listStyleType","marginTop","trainsition","cursor","primary","FilterByCategory","React","categoryList","setCategoryList","list","category","handleCategoryClick","borderTop","range","display","flexFlow","alignItems","marginLeft","FilterByPrice","salePrice_gte","salePrice_lte","setValues","handleChange","target","prevValues","size","FilterByService","filters","checked","service","FormControlLabel","Checkbox","ProductFilters","newCategoryId","FILTER_LIST","getLabel","isActive","isFreeShip","isVisible","isRemovable","onRemove","onToggle","newFilters","isPromotion","Object","keys","FilterViewer","visibleFilters","useMemo","Chip","clickable","onDelete","left","flex","justifyContent","paddingBottom","ListPage","setProductList","queryParams","Number","parseInt","_sort","setPagination","loading","setLoading","Container","Paper","elevation","newSortValue","Pagination","Math","ceil","ProductThumbnail","description","priceBox","typography","h4","originalPrice","ProductInfo","shortDescription","QuantityField","setValue","AddToCartForm","typeError","ProductMenu","Link","NavLink","exact","ProductDescription","safeDescription","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","ProductAdditional","ProductReview","cartSlice","showMiniCart","hideMiniCart","addToCart","newItem","findIndex","setQuantity","removeFromCart","idNeedToRemove","borderRight","DetailPage","productId","setProduct","result","useProductDetail","ProductFeature","pt","CartFeature","App","fecthProduct","TodoFeature","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","counter","counterReducer","userReducer","cartReducer","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d92eb0c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nTodoList.propTypes = {\r\n    todoList: PropTypes.array,\r\n    onTodoClick: PropTypes.func,\r\n};\r\nTodoList.defaultProps = {\r\n    todoList: [],\r\n    onTodoClick: null,\r\n};\r\n\r\nfunction TodoList(props) {\r\n    const { todoList, onTodoClick } = props;\r\n\r\n    const handleClick = (todo, index) => {\r\n\r\n        if (!onTodoClick) return;\r\n\r\n        onTodoClick(todo, index);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-todo\">\r\n            {todoList.map((todo, index) => (\r\n                <li\r\n                    key={todo.id}\r\n                    className={todo.status === 'completed' ? 'completed' : ''}\r\n                    onClick={() => handleClick(todo, index)}\r\n                >{todo.title}\r\n\r\n                </li>\r\n            ))\r\n            }\r\n        </ul >\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nInputField.propTypes = {\r\n    form: PropTypes.object.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n\r\n    label: PropTypes.string,\r\n    disable: PropTypes.bool,\r\n};\r\n\r\nfunction InputField(props) {\r\n    const { form, name, label, disable } = props;\r\n    // Xác định khi nào có lỗi để show error ở textfield\r\n    // formState để xác định khi nào người dùng toutch vào field\r\n    // Bởi vì khi form vừa được render lên người dùng chưa nhập gì\r\n    // vẫn là null nhưng chưa show lỗi -> chỉ show lỗi khi control này \r\n    // đã toutch rồi và có error \r\n    const { formState: { errors }, formState } = form;\r\n    // Lấy hasError nó có lỗi khi và chỉ khi cái field này được touch và \r\n    // errors có lỗi\r\n    const hasError = errors[name] && formState.touchedFields[name];\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={form.control}\r\n            render={(\r\n                { field }\r\n            ) => (\r\n                <TextField\r\n                    {...field}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    label={label}\r\n                    disabled={disable}\r\n                    error={hasError}\r\n                    helperText={errors[name]?.message}\r\n                />\r\n            )}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputField from '../../../../component/form-controls/InputField';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nTodoForm.propTypes = {\r\n    // Báo lên component cha, tui sẽ gọi hàm onSubmit này \r\n    // mỗi khi user nó submit\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction TodoForm(props) {\r\n    // Nên đặt schema trong bên trong hàm component \r\n    // Vì để sau này dùng đa ngôn ngữ sẽ có hàm để truyền dữ liệu vào\r\n    const schema = yup.object().shape({\r\n        title: yup.string().required('Please enter title'),\r\n\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            title: '',\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleSubmit = (values) => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            onSubmit(values);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n            <InputField name=\"title\" label=\"Todo\" form={form} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoList from '../../components/TodoList';\r\nimport TodoForm from '../../components/TodoForm';\r\nimport queryString from 'query-string';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\n\r\nTodos.propTypes = {\r\n\r\n};\r\n\r\nfunction Todos(props) {\r\n    const initTodoList = [\r\n        {\r\n            id: 1,\r\n            title: 'Eat',\r\n            status: 'new'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Sleep',\r\n            status: 'completed'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Code',\r\n            status: 'new'\r\n        }\r\n    ]\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n    const [todoList, setTodoList] = useState(initTodoList);\r\n    const [filterTodo, setFilterTodo] = useState(() => {\r\n        const param = queryString.parse(location.search);\r\n        return param.status || 'all';\r\n    });\r\n    useEffect(() => {\r\n        const param = queryString.parse(location.search);\r\n        setFilterTodo(param.status || 'all');\r\n    }, [location.search])\r\n\r\n    const handleTodoClick = (todo, index) => {\r\n        const newTodoList = [...todoList];\r\n        const newTodo = {\r\n            ...todoList[index],\r\n            status: todoList[index].status === 'new' ? 'completed' : 'new',\r\n        }\r\n        newTodoList[index] = newTodo\r\n        setTodoList(newTodoList);\r\n    }\r\n    const handleShowAll = () => {\r\n        // setFilterTodo('all');\r\n        const queryParam = { status: \"all\" };\r\n        history.push({\r\n            pathname: match.path,\r\n            search: queryString.stringify(queryParam),\r\n        })\r\n    }\r\n    const handleShowCompleted = () => {\r\n        const queryParam = { status: \"completed\" };\r\n        history.push({\r\n            pathname: match.path,\r\n            search: queryString.stringify(queryParam),\r\n        })\r\n    }\r\n    const handleShowNew = () => {\r\n        // setFilterTodo('new');\r\n        const queryParam = { status: \"new\" };\r\n        history.push({\r\n            pathname: match.path,\r\n            search: queryString.stringify(queryParam),\r\n        })\r\n    }\r\n    const renderedListTodo = todoList.filter(todo => filterTodo === 'all' || todo.status === filterTodo);\r\n\r\n    const handleTodoFormSubmit = (values) => {\r\n        const id = initTodoList.length + 1;\r\n        const newTodo = {\r\n            id: id,\r\n            title: values.title,\r\n            status: 'new',\r\n        };\r\n        const newListTodo = [...todoList, newTodo];\r\n        // console.log(newListTodo);\r\n        setTodoList(newListTodo);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Todo Form</h3>\r\n            {/* Khi user submit ở component TodoForm sẽ gọi hàm \r\n                handleTodoFormSubmit để xử lí ở component này.\r\n            */}\r\n            <TodoForm onSubmit={handleTodoFormSubmit} />\r\n            <h2>Todo List</h2>\r\n            <TodoList todoList={renderedListTodo} onTodoClick={handleTodoClick} />\r\n            <div className=\"button__div\">\r\n                <button onClick={() => handleShowAll()}>Show All</button>\r\n                <button onClick={() => handleShowCompleted()}>Show Completed</button>\r\n                <button onClick={() => handleShowNew()}>Show New</button>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Todos;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nTodoDetail.propTypes = {\r\n\r\n};\r\n\r\nfunction TodoDetail(props) {\r\n    return (\r\n        <div>\r\n            TodoDetail\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoDetail;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Todos from './pages/TodoList';\r\nimport { Route, Switch } from 'react-router';\r\nimport TodoDetail from './pages/TodoDetail';\r\n\r\nTotoFeature.propTypes = {\r\n\r\n};\r\n\r\nfunction TotoFeature(props) {\r\n\r\n\r\n    return (\r\n\r\n        <Switch>\r\n            <Route path=\"/todos\" component={Todos} />\r\n            <Route path=\"/todo/:id\" component={TodoDetail} />\r\n        </Switch>\r\n\r\n    );\r\n}\r\n\r\nexport default TotoFeature;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nAlbum.propTypes = {\r\n    album: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Album(props) {\r\n    const { album } = props;\r\n    return (\r\n        <div className=\"album\">\r\n            <div className=\"album__thumbnail\">\r\n                <img src={album.thumbnailUrl} alt={album.title} />\r\n            </div>\r\n            <div className=\"album__title\">\r\n                <p>{album.title}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Album;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Album from '../Album';\r\nimport './style.scss';\r\nAlbumList.propTypes = {\r\n    albumList: PropTypes.array.isRequired,\r\n};\r\n\r\nfunction AlbumList(props) {\r\n    const { albumList } = props;\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <ul className=\"albumlist\">\r\n                {\r\n                    albumList.map(album => (\r\n                        <li key={album.id}>\r\n                            <Album album={album} />\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumList;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AlbumList from './components/AlbumList';\r\n\r\nfunction AlbumFeature(props) {\r\n    const albumList = [\r\n        {\r\n            id: '1',\r\n            title: 'Mở Đầu Hoàn Hảo',\r\n            thumbnailUrl: 'https://photo-resize-zmp3.zadn.vn/w320_r1x1_jpeg/cover/1/7/b/a/17ba5720e78f37ed33351b9957fb507d.jpg'\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Nhẹ Nhàng Cùng V-Pop',\r\n            thumbnailUrl: 'https://photo-resize-zmp3.zadn.vn/w320_r1x1_jpeg/cover/2/2/8/a/228ae8d6484203f420c65c44e85511a0.jpg'\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Trong Tuần Nghe Gì?',\r\n            thumbnailUrl: 'https://photo-resize-zmp3.zadn.vn/w320_r1x1_jpeg/cover/a/0/7/c/a07c63ed2a99ec820b37369e08d2bc63.jpg'\r\n        }\r\n    ];\r\n    return (\r\n        <div>\r\n            <h2>Danh sách Album</h2>\r\n            <AlbumList albumList={albumList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nAlbumFeature.propTypes = {\r\n\r\n}\r\n\r\nexport default AlbumFeature\r\n\r\n","import axios from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'https://api.ezfrontend.com/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n//Interceptors\r\n// Add a request interceptor\r\naxiosClient.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxiosClient.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n}, function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n\r\n    const { config, status, data } = error.response;\r\n    const URLS = ['/auth/local/register', '/auth/local'];\r\n    if (URLS.includes(config.url) && status === 400) {\r\n        const errorList = data.data || [];\r\n\r\n        const firstError = errorList.length > 0 ? errorList[0] : {};\r\n\r\n        const messageList = firstError.messages || [];\r\n\r\n        const firstMessage = messageList.length > 0 ? messageList[0] : {};\r\n\r\n        throw new Error(firstMessage.message);\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\"\r\n\r\nconst productApi = {\r\n    async getAll(params) {\r\n        //Transform _page to _start vì bài demo đang dùng strapi api nên ko hỗ trợ paging\r\n        const newParams = { ...params };\r\n        newParams._start = !params._page || params._page <= 1\r\n            ? 0\r\n            : (params._page - 1) * (params._limit || 50);\r\n        delete newParams._page;\r\n        const productList = await axiosClient.get('/products', { params: newParams });\r\n        const count = await axiosClient.get('/products/count', { params: newParams });\r\n        return {\r\n            data: productList,\r\n            pagination: {\r\n                page: params._page,\r\n                limit: params._limit,\r\n                total: count,\r\n            },\r\n        };\r\n    },\r\n    get(id) {\r\n        const url = `/products/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    add(data) {\r\n        const url = '/products';\r\n        return axiosClient.post(url, data);\r\n    },\r\n    update(data) {\r\n        const url = `/products/${data.id}`;\r\n        return axiosClient.patch(url, data);\r\n    },\r\n    remove(id) {\r\n        const url = `/products/${id}`;\r\n        return axiosClient.delete(url);\r\n    }\r\n}\r\nexport default productApi;","//Mỗi features sẽ có 1 file Slice khác nhau\r\nconst { createSlice } = require('@reduxjs/toolkit');\r\n\r\nconst counterSlice = createSlice(\r\n    {\r\n        name: 'counter',\r\n        initialState: 0,\r\n        reducers: {\r\n            increase(state, action) {\r\n                return state + 1;\r\n            },\r\n            decrease(state, action) {\r\n                return state - 1;\r\n            }\r\n        },\r\n    }\r\n);\r\n\r\nconst { actions, reducer } = counterSlice;\r\nexport const { increase, decrease } = actions; //named export\r\nexport default reducer; //default export","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { decrease, increase } from './counterSlice';\r\n\r\n\r\nfunction CounterFeature(props) {\r\n    //tạo 1 dispatch để gửi action lên store\r\n    const dispatch = useDispatch();\r\n    //useSelector là 1 cái hook có thể giúp mình lấy state trong redux\r\n    const count = useSelector(state => state.counter);\r\n\r\n    const handleIncreaseClick = () => {\r\n        const action = increase() // action creator\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleDecreaseClick = () => {\r\n        const action = decrease();\r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Counter: {count}\r\n            <div>\r\n                <button onClick={handleIncreaseClick}>Increase</button>\r\n                <button onClick={handleDecreaseClick}>Decrease</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CounterFeature;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nPasswordField.propTypes = {\r\n    form: PropTypes.object.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n\r\n    label: PropTypes.string,\r\n    disable: PropTypes.bool,\r\n};\r\n\r\nfunction PasswordField(props) {\r\n    const { form, name, label, disable } = props;\r\n    // Xác định khi nào có lỗi để show error ở textfield\r\n    // formState để xác định khi nào người dùng toutch vào field\r\n    // Bởi vì khi form vừa được render lên người dùng chưa nhập gì\r\n    // vẫn là null nhưng chưa show lỗi -> chỉ show lỗi khi control này \r\n    // đã toutch rồi và có error \r\n    const { formState: { errors }, formState } = form;\r\n    // Lấy hasError nó có lỗi khi và chỉ khi cái field này được touch và \r\n    // errors có lỗi\r\n    const hasError = errors[name] && formState.touchedFields[name];\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword(x => !x);\r\n    }\r\n\r\n    return (\r\n        <FormControl error={hasError} margin=\"normal\" fullWidth variant=\"outlined\">\r\n            <InputLabel htmlFor={name}>{label}</InputLabel>\r\n            <Controller\r\n                name={name}\r\n                control={form.control}\r\n                render={\r\n                    ({ field }) => (\r\n                        <OutlinedInput\r\n                            {...field}\r\n\r\n                            id={name}\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            label={label}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={toggleShowPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            disabled={disable}\r\n\r\n                        />\r\n                    )\r\n                }\r\n            />\r\n            <FormHelperText >{errors[name]?.message}</FormHelperText>\r\n        </FormControl>\r\n\r\n\r\n    );\r\n}\r\nexport default PasswordField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputField from '../../../../component/form-controls/InputField';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlined from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport PasswordField from '../../../../component/form-controls/PasswordField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(4),\r\n    },\r\n    avatar: {\r\n        margin: '0 auto',\r\n        backgroundColor: theme.palette.secondary.main,\r\n\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2, 0, 3, 0),\r\n        textAlign: 'center',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2, 0),\r\n    },\r\n    line: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nRegisterForm.propTypes = {\r\n    // Báo lên component cha, tui sẽ gọi hàm onSubmit này \r\n    // mỗi khi user nó submit\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction RegisterForm(props) {\r\n    const classes = useStyles();\r\n    // Nên đặt schema trong bên trong hàm component \r\n    // Vì để sau này dùng đa ngôn ngữ sẽ có hàm để truyền dữ liệu vào\r\n    const schema = yup.object().shape({\r\n        fullName: yup\r\n            .string()\r\n            .required('Please enter your FullName')\r\n            .test('Should has at least two words', 'Please enter at least two words.', (value) => {\r\n                return value.trim().split(' ').length >= 2;\r\n            }),\r\n        email: yup\r\n            .string()\r\n            .required('Please enter your Email')\r\n            .email('Please enter a valid email address'),\r\n        password: yup\r\n            .string()\r\n            .required('Please enter your password')\r\n            .min(6, 'Please enter at least 6 characters.'),\r\n        retypePassword: yup\r\n            .string()\r\n            .required('Please retype your password.')\r\n            .oneOf([yup.ref('password')], 'Password does not match.'),\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            fullName: '',\r\n            email: '',\r\n            password: '',\r\n            retypePassword: '',\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            await onSubmit(values);\r\n        }\r\n        // form.reset();\r\n        // Trong này phải dùng async await vì isSubmitting sẽ được tính bằng\r\n        //thời gian chạy các lệnh trong hàm này. Nếu ko có async await thì \r\n        //code trong hàm này sẽ chạy rất nhanh.\r\n    }\r\n\r\n    const { isSubmitting } = form.formState;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isSubmitting && <LinearProgress className={classes.line} />}\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlined></LockOutlined>\r\n            </Avatar>\r\n            <Typography className={classes.title} component=\"h3\" variant=\"h5\">\r\n                Create An Account\r\n            </Typography>\r\n            <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                <InputField name=\"fullName\" label=\"Full Name\" form={form} />\r\n                <InputField name=\"email\" label=\"Email\" form={form} />\r\n                <PasswordField name=\"password\" label=\"Password\" form={form} />\r\n                <PasswordField name=\"retypePassword\" label=\"Retype Password\" form={form} />\r\n                <Button\r\n                    disabled={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Create an account\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import axiosClient from \"./axiosClient\";\r\n\r\nconst userApi = {\r\n    register(data) {\r\n        const url = '/auth/local/register';\r\n        return axiosClient.post(url, data);\r\n    },\r\n    login(data) {\r\n        const url = '/auth/local';\r\n        return axiosClient.post(url, data);\r\n    },\r\n}\r\nexport default userApi;","const StorageKeys = {\r\n    USER: 'user',\r\n    TOKEN: 'access_token',\r\n};\r\nexport default StorageKeys;","//Mỗi features sẽ có 1 file Slice khác nhau\r\n\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport userApi from '../../api/userAPI';\r\nimport StorageKeys from \"../../constants/storage-keys\";\r\n\r\n// sử dụng createAsyncThunk để tạo action async\r\n// bản chất là sử dụng middleware redux thunk để tạo action\r\nexport const register = createAsyncThunk(\r\n    'user/register',\r\n    async (payload) => {\r\n        //call api to register\r\n        const data = await userApi.register(payload);\r\n        //save data to local storage\r\n        localStorage.setItem(StorageKeys.TOKEN, data.jwt);\r\n        localStorage.setItem(StorageKeys.USER, JSON.stringify(data.user));\r\n        // return user data\r\n        return data.user;\r\n    }\r\n)\r\n\r\nexport const login = createAsyncThunk(\r\n    'user/login',\r\n    async (payload) => {\r\n        //call api to register\r\n        const data = await userApi.login(payload);\r\n        //save data to local storage\r\n        localStorage.setItem('access_token', data.jwt);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        // return user data\r\n        return data.user;\r\n    }\r\n)\r\n\r\nconst userSlice = createSlice(\r\n    {\r\n        name: 'user',\r\n        initialState: {\r\n            current: JSON.parse(localStorage.getItem(StorageKeys.USER)) || {},\r\n            settings: {},\r\n        },\r\n        // Với action sync thì chúng ta định nghĩa trong reducers\r\n        // nó sẽ tự generate ra action type\r\n        reducers: {\r\n            logout(state) {\r\n                //clear local storage\r\n                localStorage.removeItem(StorageKeys.USER);\r\n                localStorage.removeItem(StorageKeys.TOKEN);\r\n                state.current = {};\r\n            }\r\n        },\r\n        // Với action async thì chúng ta phải định nghĩa trong extraReducers.\r\n        //khi action thành công thì mình phải cập nhật dữ liệu vào state\r\n        extraReducers: {\r\n            [register.fulfilled]: (state, action) => { // state là state hiện tại, action là thông tin của action\r\n                //action.payload sẽ bằng return trên createAsyncThunk\r\n                state.current = action.payload;\r\n            },\r\n            [login.fulfilled]: (state, action) => { // state là state hiện tại, action là thông tin của action\r\n                //action.payload sẽ bằng return trên createAsyncThunk\r\n                state.current = action.payload;\r\n            }\r\n        }\r\n    }\r\n);\r\n\r\nconst { actions, reducer } = userSlice;\r\nexport const { logout } = actions;\r\nexport default reducer; //default export","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RegisterForm from '../RegisterForm/index';\r\nimport { useDispatch } from 'react-redux';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { register } from '../../userSlice';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Slide } from '@material-ui/core';\r\n\r\nRegister.propTypes = {\r\n    closeDialog: PropTypes.func,\r\n};\r\n\r\nfunction Register(props) {\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n            //auto set username = email\r\n            values.username = values.email;\r\n            const action = register(values);\r\n            const resultAction = await dispatch(action);\r\n            const user = unwrapResult(resultAction);\r\n\r\n            //close dialog\r\n            const { closeDialog } = props;\r\n\r\n            if (closeDialog) {\r\n                closeDialog();\r\n            }\r\n\r\n            //notifi when register successfull\r\n            enqueueSnackbar('Register success!!', {\r\n                anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                },\r\n                TransitionComponent: Slide,\r\n                variant: 'success',\r\n            });\r\n        } catch (error) {\r\n            console.log('Failed to register: ', error);\r\n            enqueueSnackbar(error.message, {\r\n                anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                },\r\n                TransitionComponent: Slide,\r\n                variant: 'error',\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <RegisterForm onSubmit={handleSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputField from '../../../../component/form-controls/InputField';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlined from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport PasswordField from '../../../../component/form-controls/PasswordField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(4),\r\n    },\r\n    avatar: {\r\n        margin: '0 auto',\r\n        backgroundColor: theme.palette.secondary.main,\r\n\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2, 0, 3, 0),\r\n        textAlign: 'center',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2, 0),\r\n    },\r\n    line: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nLoginForm.propTypes = {\r\n    // Báo lên component cha, tui sẽ gọi hàm onSubmit này \r\n    // mỗi khi user nó submit\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction LoginForm(props) {\r\n    const classes = useStyles();\r\n    // Nên đặt schema trong bên trong hàm component \r\n    // Vì để sau này dùng đa ngôn ngữ sẽ có hàm để truyền dữ liệu vào\r\n    const schema = yup.object().shape({\r\n\r\n        identifier: yup\r\n            .string()\r\n            .required('Please enter your Email')\r\n            .email('Please enter a valid email address'),\r\n        password: yup\r\n            .string()\r\n            .required('Please enter your password'),\r\n\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            identifier: '',\r\n            password: '',\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            await onSubmit(values);\r\n        }\r\n        // form.reset();\r\n        // Trong này phải dùng async await vì isSubmitting sẽ được tính bằng\r\n        //thời gian chạy các lệnh trong hàm này. Nếu ko có async await thì \r\n        //code trong hàm này sẽ chạy rất nhanh.\r\n    }\r\n\r\n    const { isSubmitting } = form.formState;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isSubmitting && <LinearProgress className={classes.line} />}\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlined></LockOutlined>\r\n            </Avatar>\r\n            <Typography className={classes.title} component=\"h3\" variant=\"h5\">\r\n                Sign In\r\n            </Typography>\r\n            <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n\r\n                <InputField name=\"identifier\" label=\"Email\" form={form} />\r\n                <PasswordField name=\"password\" label=\"Password\" form={form} />\r\n\r\n                <Button\r\n                    disabled={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoginForm from '../Login Form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { login } from '../../userSlice';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Slide } from '@material-ui/core';\r\n\r\nLogin.propTypes = {\r\n    closeDialog: PropTypes.func,\r\n};\r\n\r\nfunction Login(props) {\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n            //auto set username = email\r\n            values.username = values.email;\r\n            const action = login(values);\r\n            const resultAction = await dispatch(action);\r\n            const user = unwrapResult(resultAction);\r\n\r\n            //close dialog\r\n            const { closeDialog } = props;\r\n\r\n            if (closeDialog) {\r\n                closeDialog();\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log('Failed to login: ', error);\r\n            enqueueSnackbar(error.message, {\r\n                anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                },\r\n                TransitionComponent: Slide,\r\n                variant: 'error',\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <LoginForm onSubmit={handleSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst cartItemsSelector = (state) => state.cart.cartItems;\r\n\r\n//Count number of product in cart\r\nexport const cartItemsCountSelector = createSelector(cartItemsSelector,\r\n    (cartItems) => cartItems.reduce(\r\n        (count, item) => count + item.quantity, 0 //0 is initial value\r\n    )\r\n);\r\n//Calculate total of cart\r\nexport const cartTotalSelector = createSelector(\r\n    cartItemsSelector,\r\n    (cartItems) => cartItems.reduce(\r\n        (total, item) => total + (item.product.salePrice * item.quantity), 0\r\n    )\r\n)","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport { NavLink, Link, useHistory } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Register from '../../features/Auth/components/Register';\r\nimport { Badge, IconButton } from '@material-ui/core';\r\nimport { Close, ShoppingCart } from '@material-ui/icons';\r\nimport Box from '@material-ui/core/Box';\r\nimport Login from '../../features/Auth/components/Login';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { logout } from '../../features/Auth/userSlice';\r\nimport { cartItemsCountSelector } from '../../features/Cart/selectors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: 'relative'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#fff',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        zIndex: 2,\r\n    },\r\n}));\r\n\r\nconst MODE = {\r\n    LOGIN: 'login',\r\n    REGISTER: 'register',\r\n\r\n};\r\n\r\nexport default function Header() {\r\n    const dispatch = useDispatch();\r\n    const loggedInUser = useSelector(state => state.user.current.username);\r\n    const isLoggedIn = !!loggedInUser;\r\n    const cartItemsCount = useSelector(cartItemsCountSelector);\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [mode, setMode] = useState(MODE.LOGIN);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleUserClick = (e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleLogoutClick = () => {\r\n        const action = logout();\r\n        dispatch(action);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleCartClick = () => {\r\n        history.push('/cart');\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n\r\n                    <CodeIcon className={classes.menuButton} />\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Link className={classes.link} to=\"/\">EZ SHOP</Link>\r\n                    </Typography>\r\n                    <NavLink className={classes.link} to=\"/products\" activeClassName=\"active\">\r\n                        <Button color=\"inherit\">Products</Button>\r\n                    </NavLink>\r\n                    <NavLink className={classes.link} to=\"/todos\" activeClassName=\"active\">\r\n                        <Button color=\"inherit\">Todos</Button>\r\n                    </NavLink>\r\n                    <NavLink className={classes.link} to=\"/albums\" activeClassName=\"active\">\r\n                        <Button color=\"inherit\">Albums</Button>\r\n                    </NavLink>\r\n                    {\r\n                        !isLoggedIn &&\r\n                        (\r\n                            <Button color=\"inherit\" onClick={handleClickOpen}>Login</Button>\r\n                        )\r\n                    }\r\n                    <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" onClick={handleCartClick}>\r\n                        <Badge badgeContent={cartItemsCount} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        isLoggedIn && (\r\n                            <IconButton color=\"inherit\" onClick={handleUserClick}>\r\n                                <AccountCircleIcon />\r\n                            </IconButton>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleCloseMenu}\r\n                TransitionComponent={Fade}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                getContentAnchorEl={null}\r\n            >\r\n                <MenuItem onClick={handleCloseMenu}>Profile</MenuItem>\r\n                <MenuItem onClick={handleCloseMenu}>My account</MenuItem>\r\n                <MenuItem onClick={handleLogoutClick}>Logout</MenuItem>\r\n            </Menu>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                disableBackdropClick={true}\r\n                disableEscapeKeyDown={true}\r\n            >\r\n                <IconButton className={classes.closeButton} onClick={handleClose}>\r\n                    <Close />\r\n                </IconButton>\r\n                <DialogContent>\r\n                    {\r\n                        mode === MODE.REGISTER && (\r\n                            <>\r\n                                <Register closeDialog={handleClose} />\r\n                                <Box textAlign=\"center\">\r\n                                    <Button color=\"primary\" onClick={() => setMode(MODE.LOGIN)}>\r\n                                        Already have an account. Login here\r\n                                    </Button>\r\n                                </Box>\r\n                            </>\r\n                        )\r\n\r\n                    }\r\n                    {\r\n                        mode === MODE.LOGIN && (\r\n                            <>\r\n                                <Login closeDialog={handleClose} />\r\n                                <Box textAlign=\"center\">\r\n                                    <Button color=\"primary\" onClick={() => setMode(MODE.REGISTER)}>\r\n                                        Don't have an account. Register here.\r\n                                    </Button>\r\n                                </Box>\r\n                            </>\r\n                        )\r\n\r\n                    }\r\n\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nProductSkeletonList.propTypes = {\r\n    length: PropTypes.number,\r\n};\r\nProductSkeletonList.defaultProps = {\r\n    length: 6,\r\n}\r\n\r\nfunction ProductSkeletonList({ length }) {\r\n    return (\r\n        <Box>\r\n            <Grid container>\r\n                {Array.from(new Array(length)).map((x, index) => (\r\n                    <Grid item key={index} xs={12} sm={6} md={4} lg={3}>\r\n                        <Box padding={1}>\r\n                            <Skeleton variant=\"rect\" width=\"100%\" height={200} />\r\n                            <Skeleton />\r\n                            <Skeleton width=\"60%\" />\r\n                        </Box>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default ProductSkeletonList;","export const STATIC_HOST = 'https://api.ezfrontend.com';\r\nexport const THUMBNAIL_PLACEHOLDER = 'https://via.placeholder.com/444';","export function formatPrice(price) {\r\n    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price);\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Typography } from '@material-ui/core';\r\nimport { STATIC_HOST } from '../../../constants';\r\nimport { THUMBNAIL_PLACEHOLDER } from '../../../constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { formatPrice } from '../../../ultis';\r\n\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.object,\r\n};\r\n\r\nfunction Product({ product }) {\r\n    const thumbnailUrl = product.thumbnail\r\n        ? `${STATIC_HOST}${product.thumbnail?.url}`\r\n        : THUMBNAIL_PLACEHOLDER;\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        //Navigate to detail page: /products/:productId\r\n        history.push(`/products/${product.id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Box padding={1} onClick={handleClick}>\r\n                <Box padding={1} minHeight=\"215px\">\r\n                    <img src={thumbnailUrl} alt={product.name} width=\"100%\" />\r\n                </Box>\r\n\r\n                <Typography variant=\"body2\">\r\n                    {product.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    <Box component=\"span\" fontSize=\"16px\" fontWeight=\"bold\" mr={1}>\r\n                        {formatPrice(product.salePrice)}\r\n                    </Box>\r\n                    {product.promotionPercent > 0 ? ` -${product.promotionPercent}%` : ''}\r\n                </Typography>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Product from './Product';\r\n\r\nProductList.propTypes = {\r\n    data: PropTypes.array,\r\n};\r\nProductList.defaultProps = {\r\n    data: [],\r\n}\r\n\r\nfunction ProductList({ data }) {\r\n    return (\r\n        <Box>\r\n            <Grid container>\r\n                {data.map((product) => (\r\n                    <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\r\n                        <Product product={product} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nProductSort.propTypes = {\r\n    currentSort: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction ProductSort({ currentSort, onChange }) {\r\n\r\n    const handleSortChange = (event, newValue) => {\r\n        if (onChange) onChange(newValue);\r\n    }\r\n\r\n    return (\r\n        <Tabs\r\n            value={currentSort}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleSortChange}\r\n            aria-label=\"disabled tabs example\"\r\n        >\r\n            <Tab\r\n                label=\"Giá thấp tới cao\"\r\n                value=\"salePrice:ASC\"\r\n            >\r\n\r\n            </Tab>\r\n            <Tab\r\n                label=\"Giá cao xuống thấp\"\r\n                value=\"salePrice:DESC\"\r\n            >\r\n\r\n            </Tab>\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default ProductSort;","import axiosClient from \"./axiosClient\";\r\n\r\nconst categoryApi = {\r\n    getAll(params) {\r\n        const url = '/categories';\r\n        return axiosClient.get(url, { params })\r\n    },\r\n    get(id) {\r\n        const url = `/categories/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    add(data) {\r\n        const url = '/categories';\r\n        return axiosClient.post(url, data);\r\n    },\r\n    update(data) {\r\n        const url = `/categories/${data.id}`;\r\n        return axiosClient.patch(url, data);\r\n    },\r\n    remove(id) {\r\n        const url = `/categories/${id}`;\r\n        return axiosClient.delete(url);\r\n    }\r\n};\r\n\r\nexport default categoryApi;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport categoryApi from '../../../../api/categoryApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        padding: 0,\r\n        margin: 0,\r\n        listStyleType: 'none',\r\n        '& > li': {\r\n            marginTop: theme.spacing(1),\r\n            trainsition: 'all .25',\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n                color: theme.palette.primary.main,\r\n                trainsition: 'all .25',\r\n\r\n            }\r\n        }\r\n    },\r\n}));\r\n\r\nFilterByCategory.propTypes = {\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction FilterByCategory({ onChange }) {\r\n    const classes = useStyles();\r\n    const [categoryList, setCategoryList] = React.useState([]);\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const list = await categoryApi.getAll();\r\n                setCategoryList(list.map(x => ({\r\n                    id: x.id,\r\n                    name: x.name,\r\n                })));\r\n            } catch (error) {\r\n                console.log('Failed to fetch category list ', error);\r\n            }\r\n        })()\r\n    }, []);\r\n    const handleCategoryClick = (category) => {\r\n        if (onChange) {\r\n            onChange(category.id);\r\n        }\r\n    };\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant=\"subtitle2\">DANH MỤC SẢN PHẨM</Typography>\r\n            <ul className={classes.menu}>\r\n                {\r\n                    categoryList.map((category) => (\r\n                        <li key={category.id} onClick={() => handleCategoryClick(category)}>\r\n                            <Typography variant=\"body2\">{category.name}</Typography>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FilterByCategory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography, Button, TextField, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: `1px solid ${theme.palette.grey[300]}`,\r\n        padding: theme.spacing(2),\r\n    },\r\n    range: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        alignItems: 'center',\r\n        '& > span': {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        }\r\n    },\r\n}));\r\n\r\nFilterByPrice.propTypes = {\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction FilterByPrice({ onChange }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState({\r\n        salePrice_gte: 0,\r\n        salePrice_lte: 0,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }))\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (onChange) onChange(values);\r\n        setValues({\r\n            salePrice_gte: 0,\r\n            salePrice_lte: 0,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant=\"subtitle2\">GIÁ</Typography>\r\n\r\n            <Box className={classes.range}>\r\n                <TextField name=\"salePrice_gte\" value={values.salePrice_gte} onChange={handleChange} />\r\n                <span>-</span>\r\n                <TextField name=\"salePrice_lte\" value={values.salePrice_lte} onChange={handleChange} />\r\n            </Box>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleSubmit}>Áp dụng</Button>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FilterByPrice;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography, Button, TextField, makeStyles } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: `1px solid ${theme.palette.grey[300]}`,\r\n        padding: theme.spacing(2),\r\n    },\r\n    list: {\r\n        padding: 0,\r\n        margin: 0,\r\n        listStyleType: 'none',\r\n        '& > li': {\r\n            margin: 0,\r\n        }\r\n    },\r\n}));\r\n\r\nFilterByService.propTypes = {\r\n    filters: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction FilterByService({ filters, onChange }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (e) => {\r\n        if (!onChange) return;\r\n        const { name, checked } = e.target;\r\n        onChange({ [name]: checked })\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant=\"subtitle2\">DỊCH VỤ</Typography>\r\n\r\n            <ul className={classes.list}>\r\n                {[{ value: 'isPromotion', label: 'Có khuyễn mãi' }, { value: 'isFreeShip', label: 'Vận chuyển miễn phí' }].map(service => (\r\n                    <li key={service.value}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Boolean(filters[service.value])}\r\n                                    onChange={handleChange}\r\n                                    name={service.value}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label={service.label}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FilterByService;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport FilterByCategory from './Filters/FilterByCategory';\r\nimport FilterByPrice from './Filters/FilterByPrice';\r\nimport FilterByService from './Filters/FilterByService';\r\n\r\n\r\n\r\nProductFilters.propTypes = {\r\n    filters: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction ProductFilters({ filters, onChange }) {\r\n\r\n    const handleCategoryChange = (newCategoryId) => {\r\n        if (!onChange) return;\r\n        const newFilters = {\r\n            'category.id': newCategoryId,\r\n        };\r\n        onChange(newFilters);\r\n    };\r\n    const handleChange = (values) => {\r\n        if (onChange) {\r\n            onChange(values);\r\n        }\r\n    };\r\n    return (\r\n        <Box>\r\n            <FilterByCategory onChange={handleCategoryChange} />\r\n            <FilterByPrice onChange={handleChange} />\r\n            <FilterByService filters={filters} onChange={handleChange} />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ProductFilters;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { useMemo } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap',\r\n        alignItems: 'center',\r\n        padding: 0,\r\n        margin: theme.spacing(2, 0),\r\n        listStyleType: 'none',\r\n\r\n        '& > li': {\r\n            margin: 0,\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst FILTER_LIST = [\r\n    {\r\n        id: 1,\r\n        getLabel: () => 'Giao hàng miễn phí',\r\n        isActive: (filters) => filters.isFreeShip,\r\n        isVisible: () => true,\r\n        isRemovable: false,\r\n        onRemove: () => { },\r\n        onToggle: (filters) => {\r\n            const newFilters = { ...filters };\r\n            if (newFilters.isFreeShip) {\r\n                delete newFilters.isFreeShip;\r\n            } else {\r\n                newFilters.isFreeShip = true;\r\n            }\r\n            return newFilters;\r\n        },\r\n    },\r\n    {\r\n        id: 2,\r\n        getLabel: () => 'Có khuyến mãi',\r\n        isActive: () => true,\r\n        isVisible: (filters) => filters.isPromotion,\r\n        isRemovable: true,\r\n        onRemove: (filters) => {\r\n            const newFilters = { ...filters }\r\n            delete newFilters.isPromotion;\r\n            return newFilters;\r\n        },\r\n        onToggle: null,\r\n    },\r\n    {\r\n        id: 3,\r\n        getLabel: (filters) => `Từ ${filters.salePrice_gte} đến ${filters.salePrice_lte}`,\r\n        isActive: () => true,\r\n        isVisible: (filters) => Object.keys(filters).includes('salePrice_lte') && Object.keys(filters).includes('salePrice_gte'),\r\n        isRemovable: true,\r\n        onRemove: (filters) => {\r\n            const newFilters = { ...filters }\r\n            delete newFilters.salePrice_lte;\r\n            delete newFilters.salePrice_gte;\r\n\r\n            return newFilters;\r\n        },\r\n        onToggle: null,\r\n    },\r\n    {\r\n        id: 4,\r\n        getLabel: (filters) => 'Danh mục',\r\n        isActive: () => true,\r\n        isVisible: (filters) => Object.keys(filters).includes('category.id'),\r\n        isRemovable: true,\r\n        onRemove: (filters) => {\r\n            const newFilters = { ...filters }\r\n            delete newFilters['category.id'];\r\n\r\n            return newFilters;\r\n        },\r\n        onToggle: null,\r\n    },\r\n]\r\nFilterViewer.propTypes = {\r\n    filters: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nfunction FilterViewer({ filters = {}, onChange = null }) {\r\n    const classes = useStyles();\r\n\r\n    const visibleFilters = useMemo(() => {\r\n        return FILTER_LIST.filter(x => x.isVisible(filters))\r\n    }, [filters]);\r\n\r\n    return (\r\n        <Box component=\"ul\" className={classes.root}>\r\n            {\r\n                visibleFilters.map(x => (\r\n                    <li key={x.id}>\r\n                        <Chip\r\n                            label={x.getLabel(filters)}\r\n                            color={x.isActive(filters) ? 'primary' : 'default'}\r\n                            clickable={!x.isRemovable}\r\n                            onClick={x.isRemovable ? null : () => {\r\n                                if (!onChange) return;\r\n\r\n                                const newFilters = x.onToggle(filters);\r\n                                onChange(newFilters);\r\n                            }}\r\n                            onDelete={x.isRemovable ? () => {\r\n                                if (!onChange) return;\r\n\r\n                                const newFilters = x.onRemove(filters);\r\n                                onChange(newFilters);\r\n                            } : null}\r\n                        />\r\n                    </li>\r\n                ))\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FilterViewer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, Grid, makeStyles } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport productApi from '../../../api/productApi';\r\nimport ProductSkeletonList from '../components/ProductSkeletonList';\r\nimport ProductList from '../components/ProductList';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ProductSort from '../components/ProductSort';\r\nimport ProductFilters from '../components/ProductFilters';\r\nimport FilterViewer from '../components/FilterViewer';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport queryString from 'query-string';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    left: {\r\n        width: '250px',\r\n    },\r\n    right: {\r\n        flex: '1 1 0',\r\n    },\r\n    pagination: {\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        justifyContent: 'center',\r\n        marginTop: '30px',\r\n        paddingBottom: '20px',\r\n    },\r\n}));\r\n\r\nListPage.propTypes = {\r\n\r\n};\r\n\r\nfunction ListPage(props) {\r\n    const classes = useStyles();\r\n    const [productList, setProductList] = React.useState([]);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    // Cơ bản là history và location giống nhau nhưng ta sài history vì\r\n    // location khi ta push data vào nó sẽ luôn trả về một object mới\r\n    // nhưng với history nó là 1 object luôn không thay đổi \r\n    // bên trong history có location và th location nó thay đổi nhưng object history là không bao giờ thay đổi.\r\n    const queryParams = React.useMemo(() => {\r\n        const params = queryString.parse(location.search);\r\n        return {\r\n            ...params,\r\n            _page: Number.parseInt(params._page) || 1,\r\n            _limit: Number.parseInt(params._limit) || 12,\r\n            _sort: params._sort || 'salePrice:ASC',\r\n            isPromotion: params.isPromotion === 'true',\r\n            isFreeShip: params.isFreeShip === 'true',\r\n        }\r\n    }, [location.search]);\r\n    const [pagination, setPagination] = React.useState({\r\n        limit: 10,\r\n        total: 10,\r\n        page: 1,\r\n    });\r\n    const [loading, setLoading] = React.useState(true);\r\n    // const [filters, setFilters] = React.useState({\r\n    //     _page: 1,\r\n    //     _limit: 12,\r\n    //     _sort: 'salePrice:ASC',\r\n    // });\r\n    // const [filters, setFilters] = React.useState(() => ({\r\n    //     ...queryParams,\r\n    //     _page: Number.parseInt(queryParams._page) || 1,\r\n    //     _limit: Number.parseInt(queryParams._limit) || 12,\r\n    //     _sort: queryParams._sort || 'salePrice:ASC',\r\n    // }));\r\n    // React.useEffect(() => {\r\n    //     //Todo: Sync filter to URL\r\n    //     history.push({\r\n    //         pathname: history.location.pathname,\r\n    //         search: queryString.stringify(filters),\r\n    //     });\r\n    // }, [history, filters]);\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { data, pagination } = await productApi.getAll(queryParams);\r\n                console.log({ data, pagination });\r\n                setProductList(data);\r\n                setPagination(pagination);\r\n            } catch (error) {\r\n                console.log('Failed to load product list: ', error);\r\n            }\r\n            setLoading(false);\r\n        })();\r\n\r\n    }, [queryParams]);\r\n    const handlePageChange = (e, page) => {\r\n        // setFilters(prevFilters => ({\r\n        //     ...prevFilters,\r\n        //     _page: page,\r\n        // }));\r\n\r\n        const filters = {\r\n            ...queryParams,\r\n            _page: page,\r\n        };\r\n\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(filters),\r\n        });\r\n    };\r\n    const handleSortChange = (newSortValue) => {\r\n        // setFilters((prevFilters) => ({\r\n        //     ...prevFilters,\r\n        //     _sort: newSortValue,\r\n        // }));\r\n\r\n\r\n        const filters = {\r\n            ...queryParams,\r\n            _sort: newSortValue,\r\n        };\r\n\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(filters),\r\n        });\r\n    };\r\n    const handleFilterChange = (newFilters) => {\r\n        // setFilters((prevFilters) => ({\r\n        //     ...prevFilters,\r\n        //     ...newFilters,\r\n        // }));\r\n\r\n        const filters = {\r\n            ...queryParams,\r\n            ...newFilters,\r\n        };\r\n\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(filters),\r\n        });\r\n    };\r\n    const handleViewFilter = (newFilters) => {\r\n        // setFilters(newFilters);\r\n        history.push({\r\n            pathname: history.location.pathname,\r\n            search: queryString.stringify(newFilters),\r\n        });\r\n    };\r\n    return (\r\n        <Box>\r\n            <Container>\r\n                <Grid container spacing={1}>\r\n                    <Grid item className={classes.left}>\r\n                        <Paper elevation={0}>\r\n                            <ProductFilters filters={queryParams} onChange={handleFilterChange} />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item className={classes.right}>\r\n\r\n                        <Paper elevation={0}>\r\n                            <ProductSort currentSort={queryParams._sort} onChange={handleSortChange} />\r\n                            <FilterViewer filters={queryParams} onChange={handleViewFilter} />\r\n                            {\r\n                                loading ? <ProductSkeletonList length={queryParams._limit} /> : <ProductList data={productList} />\r\n                            }\r\n                            <Box className={classes.pagination}>\r\n                                <Pagination\r\n                                    color=\"primary\"\r\n                                    count={Math.ceil(pagination.total / pagination.limit)}\r\n                                    page={pagination.page}\r\n                                    onChange={handlePageChange}\r\n                                />\r\n                            </Box>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@material-ui/core';\r\nimport { STATIC_HOST, THUMBNAIL_PLACEHOLDER } from '../../../constants';\r\n\r\nProductThumbnail.propTypes = {\r\n    product: PropTypes.object,\r\n};\r\n\r\nfunction ProductThumbnail({ product }) {\r\n    const thumbnailUrl = product.thumbnail\r\n        ? `${STATIC_HOST}${product.thumbnail?.url}`\r\n        : THUMBNAIL_PLACEHOLDER;\r\n    return (\r\n        <Box>\r\n            <img src={thumbnailUrl} alt={product.name} width=\"100%\" />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ProductThumbnail;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\nimport { formatPrice } from '../../../ultis';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    },\r\n    description: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    priceBox: {\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.grey[100],\r\n    },\r\n    salePrice: {\r\n        fontSize: theme.typography.h4.fontSize,\r\n        marginRight: theme.spacing(3),\r\n        fontWeight: 'bold',\r\n    },\r\n    originalPrice: {\r\n        marginRight: theme.spacing(2),\r\n        textDecoration: 'line-through',\r\n    },\r\n    promotionPercent: {\r\n\r\n    },\r\n}));\r\n\r\nProductInfo.propTypes = {\r\n    product: PropTypes.object,\r\n};\r\n\r\nfunction ProductInfo({ product = {} }) {\r\n    const classes = useStyles();\r\n    const { name, shortDescription, salePrice, originalPrice, promotionPercent } = product;\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography component=\"h1\" variant=\"h4\">{name}</Typography>\r\n            <Typography variant=\"body2\" className={classes.description}>{shortDescription}</Typography>\r\n            <Box className={classes.priceBox}>\r\n                <Box component=\"span\" className={classes.salePrice}>{formatPrice(salePrice)}</Box>\r\n\r\n                {\r\n                    promotionPercent > 0 && (\r\n                        <>\r\n                            <Box component=\"span\" className={classes.originalPrice}>{formatPrice(originalPrice)}</Box>\r\n                            <Box component=\"span\" className={classes.promotionPercent}>{`-${promotionPercent}%`}</Box>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nQuantityField.propTypes = {\r\n    form: PropTypes.object.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n\r\n    label: PropTypes.string,\r\n    disable: PropTypes.bool,\r\n};\r\n\r\nfunction QuantityField(props) {\r\n    const { form, name, label, disable } = props;\r\n    // Xác định khi nào có lỗi để show error ở textfield\r\n    // formState để xác định khi nào người dùng toutch vào field\r\n    // Bởi vì khi form vừa được render lên người dùng chưa nhập gì\r\n    // vẫn là null nhưng chưa show lỗi -> chỉ show lỗi khi control này \r\n    // đã toutch rồi và có error \r\n    const { formState: { errors }, formState, setValue } = form;\r\n    // Lấy hasError nó có lỗi khi và chỉ khi cái field này được touch và \r\n    // errors có lỗi\r\n    const hasError = errors[name] && formState.touchedFields[name];\r\n\r\n\r\n    return (\r\n        <FormControl error={hasError} margin=\"normal\" fullWidth variant=\"outlined\">\r\n            {/* <InputLabel htmlFor={name}>{label}</InputLabel> */}\r\n            <Typography>{label}</Typography>\r\n            <Controller\r\n                name={name}\r\n                control={form.control}\r\n                render={\r\n                    ({ field }) => (\r\n                        <Box>\r\n                            <IconButton onClick={() => setValue(field.name, Number.parseInt(field.value) - 1)} >\r\n                                <RemoveCircleOutlineIcon />\r\n                            </IconButton>\r\n                            <OutlinedInput\r\n                                {...field}\r\n\r\n                                id={name}\r\n                                type=\"number\"\r\n\r\n                                disabled={disable}\r\n\r\n                            />\r\n                            <IconButton onClick={() => setValue(field.name, Number.parseInt(field.value) + 1)} >\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                    )\r\n                }\r\n            />\r\n            <FormHelperText >{errors[name]?.message}</FormHelperText>\r\n        </FormControl>\r\n\r\n\r\n    );\r\n}\r\nexport default QuantityField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as yup from \"yup\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport InputField from '../../../component/form-controls/InputField';\r\nimport { Button } from '@material-ui/core';\r\nimport QuantityField from '../../../component/form-controls/QuantityField';\r\n\r\nAddToCartForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction AddToCartForm({ onSubmit = null }) {\r\n    const schema = yup.object().shape({\r\n        quantity: yup\r\n            .number()\r\n            .min(1, 'Please enter at least 1')\r\n            .required('Please enter quantity')\r\n            .typeError('Please enter a number'),\r\n\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            quantity: 1,\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n\r\n        if (onSubmit) {\r\n            await onSubmit(values);\r\n        }\r\n        // form.reset();\r\n        // Trong này phải dùng async await vì isSubmitting sẽ được tính bằng\r\n        //thời gian chạy các lệnh trong hàm này. Nếu ko có async await thì \r\n        //code trong hàm này sẽ chạy rất nhanh.\r\n    }\r\n    return (\r\n        <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n\r\n            <QuantityField name=\"quantity\" label=\"Quantity\" form={form} />\r\n\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Buy\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddToCartForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Link, makeStyles } from '@material-ui/core';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n        '& > li': {\r\n            padding: theme.spacing(2, 4)\r\n        },\r\n        '& > li > a': {\r\n            color: theme.palette.grey[700],\r\n        },\r\n        '& > li > a.active': {\r\n            color: theme.palette.primary.main,\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nProductMenu.propTypes = {\r\n\r\n};\r\n\r\nfunction ProductMenu(props) {\r\n    const classes = useStyles();\r\n    const { url } = useRouteMatch();\r\n    return (\r\n        <Box component=\"ul\" className={classes.root}>\r\n            <li>\r\n                <Link component={NavLink} to={url} exact>Description</Link>\r\n            </li>\r\n            <li>\r\n                <Link component={NavLink} to={`${url}/additional`} exact>Additional Information</Link>\r\n            </li>\r\n            <li>\r\n                <Link component={NavLink} to={`${url}/reviews`} exact>Reviews</Link>\r\n            </li>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ProductMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper } from '@material-ui/core';\r\nimport DOMPurify from 'dompurify';\r\n\r\nProductDescription.propTypes = {\r\n    product: PropTypes.object,\r\n};\r\n\r\nfunction ProductDescription({ product = {} }) {\r\n    const safeDescription = DOMPurify.sanitize(product.description);\r\n    return (\r\n        <Paper elevation={0} style={{ padding: '15px' }}>\r\n            <div dangerouslySetInnerHTML={{ __html: safeDescription }} />\r\n        </Paper>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ProductDescription;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nProductAdditional.propTypes = {\r\n\r\n};\r\n\r\nfunction ProductAdditional(props) {\r\n    return (\r\n        <div>\r\n            Additional\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductAdditional;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nProductReview.propTypes = {\r\n\r\n};\r\n\r\nfunction ProductReview(props) {\r\n    return (\r\n        <div>\r\n            Review\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductReview;","//Mỗi features sẽ có 1 file Slice khác nhau\r\nconst { createSlice } = require('@reduxjs/toolkit');\r\n\r\nconst cartSlice = createSlice(\r\n    {\r\n        name: 'cart',\r\n        initialState: {\r\n            showMiniCart: false,\r\n            cartItems: [],\r\n        },\r\n        reducers: {\r\n            showMiniCart(state, action) {\r\n                state.showMiniCart = true;\r\n            },\r\n            hideMiniCart(state, action) {\r\n                state.showMiniCart = false;\r\n            },\r\n            addToCart(state, action) {\r\n                // newItem = { id, product, quantity }\r\n                const newItem = action.payload;\r\n                const index = state.cartItems.findIndex(x => x.id === newItem.id);\r\n                if (index >= 0) {\r\n                    //inscrease quantity\r\n                    state.cartItems[index].quantity += newItem.quantity;\r\n                } else {\r\n                    state.cartItems.push(newItem);\r\n                }\r\n            },\r\n            setQuantity(state, action) {\r\n                const { id, quantity } = action.payload;\r\n                //check product\r\n                const index = state.cartItems.findIndex(x => x.id === id);\r\n                if (index >= 0) {\r\n                    state.cartItems[index].quantity = quantity;\r\n                }\r\n            },\r\n            removeFromCart(state, action) {\r\n                const idNeedToRemove = action.payload;\r\n                //Do state của mình là dạng object nên nó được hỗ trợ immer js\r\n                // Nên ta có thể mutestate cái state trực tiếp mà ko cần phải clone mới dữ liệu\r\n\r\n                state.cartItems = state.cartItems.filter(x => x.id !== idNeedToRemove);\r\n            }\r\n        },\r\n    }\r\n);\r\n\r\nconst { actions, reducer } = cartSlice;\r\nexport const { showMiniCart, hideMiniCart, addToCart, setQuantity, removeFromCart } = actions; //named export\r\nexport default reducer; //default export","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, Paper, Grid, makeStyles, LinearProgress } from '@material-ui/core';\r\nimport ProductThumbnail from '../components/ProductThumbnail';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport useProductDetail from '../hooks/useProductDetail';\r\nimport ProductInfo from '../components/ProductInfo';\r\nimport AddToCartForm from '../components/AddToCartForm';\r\nimport ProductMenu from '../components/ProductMenu';\r\nimport ProductDescription from '../components/ProductDescription';\r\nimport ProductAdditional from '../components/ProductAdditional';\r\nimport ProductReview from '../components/ProductReview';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../Cart/cartSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    left: {\r\n        width: '400px',\r\n        padding: theme.spacing(1.5),\r\n        borderRight: `1px solid ${theme.palette.grey[300]}`,\r\n    },\r\n    right: {\r\n        flex: '1 1 0',\r\n        padding: theme.spacing(1.5),\r\n    },\r\n    loading: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nDetailPage.propTypes = {\r\n\r\n};\r\n\r\nfunction DetailPage(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { params: { productId }, url } = useRouteMatch();\r\n    const { product, loading } = useProductDetail(productId);\r\n    if (loading) {\r\n        return <Box className={classes.loading}>\r\n            <LinearProgress />\r\n        </Box>\r\n    }\r\n\r\n    const handleAddToCartSubmit = (values) => {\r\n        const action = addToCart({\r\n            id: product.id,\r\n            product,\r\n            quantity: values.quantity,\r\n        });\r\n        console.log(action);\r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Container>\r\n                <Paper elevation={0}>\r\n                    <Grid container>\r\n                        <Grid item className={classes.left}>\r\n                            <ProductThumbnail product={product} />\r\n                        </Grid>\r\n                        <Grid item className={classes.right}>\r\n                            <ProductInfo product={product} />\r\n                            <AddToCartForm onSubmit={handleAddToCartSubmit} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                <ProductMenu />\r\n                <Switch>\r\n                    <Route exact path={url}>\r\n                        <ProductDescription product={product} />\r\n                    </Route>\r\n                    <Route exact path={`${url}/additional`}>\r\n                        <ProductAdditional />\r\n                    </Route>\r\n                    <Route exact path={`${url}/reviews`}>\r\n                        <ProductReview />\r\n                    </Route>\r\n                </Switch>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default DetailPage;","import React from 'react';\r\nimport productApi from '../../../api/productApi';\r\n\r\nexport default function useProductDetail(productId) {\r\n    const [product, setProduct] = React.useState({});\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                setLoading(true);\r\n                const result = await productApi.get(productId);\r\n                setProduct(result);\r\n            } catch (error) {\r\n                console.log('Failed to fetch product ', error);\r\n            }\r\n            setLoading(false);\r\n        })()\r\n    }, [productId]);\r\n\r\n    return { product, loading };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport ListPage from './pages/ListPage';\r\nimport { Box } from '@material-ui/core';\r\nimport DetailPage from './pages/DetailPage';\r\n\r\nProductFeature.propTypes = {\r\n\r\n};\r\n\r\nfunction ProductFeature(props) {\r\n    const match = useRouteMatch();\r\n    return (\r\n        <Box pt={4}>\r\n            <Switch>\r\n                {/* match.url tương ứng với đường dẫn của th cha định nghĩa ở app.js */}\r\n                <Route path={match.url} exact component={ListPage} />\r\n                <Route path={`${match.url}/:productId`} component={DetailPage} />\r\n\r\n            </Switch>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ProductFeature;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nCartFeature.propTypes = {\r\n\r\n};\r\n\r\nfunction CartFeature(props) {\r\n    return (\r\n        <div>\r\n            Cart Feature\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartFeature;","import logo from './logo.svg';\n// import './App.css';\nimport TodoFeature from './features/Todo/index';\nimport AlbumFeature from './features/Album';\nimport { Route, Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport productApi from './api/productApi';\nimport CounterFeature from './features/Counter';\nimport Header from './component/Header';\nimport { Button } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport Slide from '@material-ui/core/Slide';\nimport ProductFeature from './features/Product/Product';\nimport CartFeature from './features/Cart/Cart';\n\n\n\nfunction App() {\n  const { enqueueSnackbar } = useSnackbar();\n  useEffect(() => {\n    const params = {\n      _limit: 10,\n    };\n    const fecthProduct = async () => {\n      const productList = productApi.getAll(params);\n      console.log(productList);\n    };\n\n    fecthProduct();\n  }, []);\n  const showNoti = () => {\n    enqueueSnackbar('Register success!', {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right',\n      },\n      TransitionComponent: Slide,\n      variant: 'success'\n    })\n  }\n  return (\n    <div className=\"App\">\n      {/* <TodoFeature /> */}\n      {/* <AlbumFeature /> */}\n      <Header />\n      {/* <Button onClick={showNoti}>Show noti</Button> */}\n      {/* <Route path=\"/\" component={CounterFeature} /> */}\n      <Route path=\"/todos\" component={TodoFeature} />\n      <Route path=\"/albums\" component={AlbumFeature} />\n      <Route path=\"/products\" component={ProductFeature} />\n      <Route path=\"/cart\" component={CartFeature} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/Counter/counterSlice\";\r\nimport userReducer from \"../features/Auth/userSlice\";\r\nimport cartReducer from \"../features/Cart/cartSlice\";\r\n\r\nconst rootReducer = {\r\n    counter: counterReducer,\r\n    user: userReducer,\r\n    cart: cartReducer,\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n// Xây dựng slice bao gồm\r\n//  -> Xác định những state nào để lưu trữ dữ liệu.\r\n//  -> Xác định những action sẽ tác động lên các state đó.\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\nimport { SnackbarProvider } from 'notistack';\nimport Slide from '@material-ui/core/Slide';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <SnackbarProvider>\n          <App />\n        </SnackbarProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}